syntax = "proto3";

package orderbook;

service OrderbookAggregator {
    rpc BookSummary(SummaryReq) returns (stream Summary);
}

message OberonProof {
    string id = 1;
    uint64 timestamp = 2;
    bytes proof = 3;
}

message SummaryReq {
    OberonProof proof = 1;
    string symbol = 2;
}

message Summary {
    // encoded as a string to avoid rounding errors
    // deserialize to a fixed point decimal number suitable for financial calculations
    string spread = 1;
    repeated Level bids = 2;
    repeated Level asks = 3;
}

message Level {
    string exchange = 1;
    // encoded as a string to avoid rounding errors
    // deserialize to a fixed point decimal number suitable for financial calculations
    string price = 2;
    string amount = 3;
}
